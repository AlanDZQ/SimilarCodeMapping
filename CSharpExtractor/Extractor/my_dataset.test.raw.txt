209|get|common|characters string|builder,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter)_(PredefinedType),string string|builder,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter)_(PredefinedType),string string|builder,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter),first|word string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),first|word string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),first|word string|builder,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter),second|word string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),second|word string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),second|word string|builder,(IdentifierName)^(ObjectCreationExpression)_(ArgumentList)_(Argument0)_(IdentifierName),second|word string|builder,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter)_(PredefinedType),int string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(PredefinedType),int string|builder,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter),distance|sep string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),distance|sep string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),distance|sep string|builder,(IdentifierName)^(VariableDeclaration)_(VariableDeclarator),builder string|builder,(IdentifierName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),builder string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder string|builder,(IdentifierName)^(VariableDeclaration)_(VariableDeclarator),builder string|builder,(IdentifierName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),builder string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i string|builder,(IdentifierName)^(MethodDeclaration),METHOD_NAME string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME string,(PredefinedType)^(Parameter),first|word string,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter),first|word string,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter),second|word string,(PredefinedType)^(Parameter),second|word string,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter)_(PredefinedType),int string,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter),distance|sep string,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),builder string,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),builder string,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME string,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME first|word,(Parameter)^(ParameterList)_(Parameter),second|word first|word,(IdentifierName)^(EqualsExpression)^(LogicalOrExpression)_(EqualsExpression)_(IdentifierName),second|word first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(PredefinedType),int first|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(PredefinedType),int first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),builder first|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)_(ReturnStatement)_(IdentifierName),builder first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i first|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i first|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)_(IdentifierName),i first|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i first|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i first|word,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i first|word,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),length first|word,(IdentifierName0)^(ElementAccessExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(PredefinedType),char first|word,(IdentifierName0)^(ElementAccessExpression)^(EqualsValueClause)^(VariableDeclarator),ch first|word,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME first|word,(IdentifierName)^(EqualsExpression)^(LogicalOrExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME first|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME second|word,(Parameter)^(ParameterList)_(Parameter)_(PredefinedType),int second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(PredefinedType),int second|word,(Parameter)^(ParameterList)_(Parameter),distance|sep second|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList)_(Argument0)_(AddExpression)_(IdentifierName),distance|sep second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),builder second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder second|word,(IdentifierName)^(Argument0)^(ArgumentList)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),builder second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i second|word,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i second|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList)_(Argument0)_(AddExpression)_(IdentifierName),i second|word,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),length second|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math second|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)^(LessThanExpression)_(IdentifierName),j second|word,(IdentifierName0)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),min second|word,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME second|word,(IdentifierName)^(EqualsExpression)^(LogicalOrExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(Parameter),distance|sep int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),distance|sep int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),builder int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(ReturnStatement)_(IdentifierName),builder int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(PredefinedType),bool int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),flag int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LogicalAndExpression)_(LogicalNotExpression)_(IdentifierName),flag int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),max int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),j int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LogicalAndExpression)_(LessThanExpression)_(IdentifierName),j int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),builder distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder distance|sep,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList)_(Argument0)_(NumericLiteralExpression),0 distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i distance|sep,(IdentifierName)^(SubtractExpression)_(IdentifierName),i distance|sep,(IdentifierName)^(AddExpression)_(IdentifierName),i distance|sep,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList)_(Argument1)_(SimpleMemberAccessExpression)_(IdentifierName1),length distance|sep,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math distance|sep,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math distance|sep,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),max distance|sep,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)^(EqualsValueClause)^(VariableDeclarator),j distance|sep,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)^(LessThanExpression)_(IdentifierName),j distance|sep,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),min distance|sep,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME builder,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),builder builder,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i builder,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i builder,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i builder,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length builder,(IdentifierName0)^(SimpleMemberAccessExpression0)^(InvocationExpression)_(ArgumentList1)_(Argument0)_(IdentifierName),ch builder,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),append builder,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME builder,(IdentifierName)^(ReturnStatement)^(Block)^(MethodDeclaration),METHOD_NAME builder,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i builder,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i builder,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i builder,(IdentifierName0)^(ElementAccessExpression)^(EqualsExpression)_(IdentifierName),ch builder,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),j builder,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),j builder,(IdentifierName0)^(ElementAccessExpression0)^(SimpleAssignmentExpression)_(CharacterLiteralExpression1),SPACE builder,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator),i 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i 0,(NumericLiteralExpression)^(Argument0)^(ArgumentList)_(Argument1)_(SubtractExpression)_(IdentifierName),i 0,(NumericLiteralExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math 0,(NumericLiteralExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),max 0,(NumericLiteralExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)^(EqualsValueClause)^(VariableDeclarator),j 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList)_(Argument1)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(PredefinedType),char i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),ch i,(IdentifierName)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)^(EqualsValueClause)^(VariableDeclarator),ch i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(PredefinedType),bool i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),flag i,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math i,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math i,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),max i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),j i,(IdentifierName)^(SubtractExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)^(EqualsValueClause)^(VariableDeclarator),j i,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)^(LessThanExpression)_(IdentifierName),j i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),j i,(IdentifierName)^(AddExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),min i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(IdentifierName)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME length,(IdentifierName1)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math length,(IdentifierName1)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)^(LessThanExpression)_(IdentifierName),j length,(IdentifierName1)^(SimpleMemberAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),min length,(IdentifierName1)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME char,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),ch char,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(PredefinedType),bool char,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),flag char,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME ch,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(PredefinedType),bool ch,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),flag ch,(IdentifierName)^(EqualsExpression)^(IfStatement)_(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName0),flag ch,(IdentifierName)^(EqualsExpression)^(IfStatement)^(Block)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),j ch,(IdentifierName)^(EqualsExpression)_(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),j ch,(IdentifierName)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),append ch,(IdentifierName)^(EqualsExpression)^(IfStatement)_(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(CharacterLiteralExpression1),SPACE ch,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME bool,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),flag bool,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),j bool,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),j bool,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME flag,(IdentifierName)^(LogicalNotExpression)^(LogicalAndExpression)_(LessThanExpression)_(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),math flag,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),j flag,(IdentifierName)^(LogicalNotExpression)^(LogicalAndExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),j flag,(IdentifierName)^(LogicalNotExpression)^(LogicalAndExpression)_(LessThanExpression)_(IdentifierName),j flag,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),j flag,(IdentifierName)^(LogicalNotExpression)^(LogicalAndExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),j flag,(IdentifierName)^(LogicalNotExpression)^(LogicalAndExpression)_(LessThanExpression)_(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),min flag,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME math,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),max math,(IdentifierName0)^(SimpleMemberAccessExpression0)^(InvocationExpression)^(EqualsValueClause)^(VariableDeclarator),j math,(IdentifierName0)^(SimpleMemberAccessExpression0)^(InvocationExpression)^(LessThanExpression)_(IdentifierName),j math,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),min max,(IdentifierName1)^(SimpleMemberAccessExpression0)^(InvocationExpression)^(EqualsValueClause)^(VariableDeclarator),j j,(IdentifierName)^(LessThanExpression)_(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),min j,(IdentifierName)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression0)^(SimpleAssignmentExpression)_(CharacterLiteralExpression1),SPACE j,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME j,(IdentifierName)^(PostIncrementExpression)^(ForStatement)^(Block)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME string|builder,(IdentifierName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(IdentifierName),string|builder string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(IdentifierName),string|builder string|builder,(IdentifierName)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(ObjectCreationExpression)_(IdentifierName),string|builder string|builder,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(IdentifierName),string|builder string|builder,(IdentifierName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(IdentifierName),string|builder string|builder,(IdentifierName)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(ObjectCreationExpression)_(IdentifierName),string|builder string,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter)_(PredefinedType),string string,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter)_(PredefinedType),string i,(IdentifierName)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LessThanExpression)_(IdentifierName),i i,(IdentifierName)^(LessThanExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i j,(IdentifierName)^(LessThanExpression)^(LogicalAndExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),j j,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LogicalAndExpression)_(LessThanExpression)_(IdentifierName),j j,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LogicalAndExpression)_(LessThanExpression)_(IdentifierName),j j,(IdentifierName)^(LessThanExpression)^(LogicalAndExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),j
112|reverse int,(PredefinedType)^(MethodDeclaration)_(ParameterList)_(Parameter),x int,(PredefinedType)^(Parameter),x int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),x int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),x int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(NotEqualsExpression)_(IdentifierName),x int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(NotEqualsExpression)_(IdentifierName),x int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(DivideAssignmentExpression)_(IdentifierName),x int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(NotEqualsExpression)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(NotEqualsExpression)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),reversed int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),reversed int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),reversed int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(ReturnStatement)_(IdentifierName),reversed int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),pop int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),pop int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),push int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(DivideAssignmentExpression)_(NumericLiteralExpression),10 int,(PredefinedType)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(NotEqualsExpression)_(NumericLiteralExpression),0 x,(IdentifierName)^(NotEqualsExpression)_(NumericLiteralExpression),0 x,(IdentifierName)^(DivideAssignmentExpression)^(ForStatement)_(NotEqualsExpression)_(NumericLiteralExpression),0 x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),reversed x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),reversed x,(IdentifierName)^(DivideAssignmentExpression)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),reversed x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),reversed x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)^(Block)_(ReturnStatement)_(IdentifierName),reversed x,(IdentifierName)^(DivideAssignmentExpression)^(ForStatement)^(Block)_(ReturnStatement)_(IdentifierName),reversed x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),pop x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),pop x,(IdentifierName)^(ModuloExpression1)^(SimpleAssignmentExpression)_(IdentifierName0),pop x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),push x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),push x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(DivideAssignmentExpression)_(NumericLiteralExpression),10 x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)_(DivideAssignmentExpression)_(NumericLiteralExpression),10 x,(IdentifierName)^(DivideAssignmentExpression)_(NumericLiteralExpression),10 x,(IdentifierName)^(ModuloExpression)_(NumericLiteralExpression),10 x,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME x,(IdentifierName)^(DivideAssignmentExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator),reversed 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),reversed 0,(NumericLiteralExpression)^(ReturnStatement)^(IfStatement)_(NotEqualsExpression)_(IdentifierName),reversed 0,(NumericLiteralExpression)^(ReturnStatement)^(IfStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName0),reversed 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)^(Block)_(ReturnStatement)_(IdentifierName),reversed 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator),pop 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(VariableDeclarator),pop 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),pop 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(VariableDeclarator),push 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator),push 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),push 0,(NumericLiteralExpression)^(ReturnStatement)^(IfStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName0),push 0,(NumericLiteralExpression)^(ReturnStatement)^(IfStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName1),push 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)_(DivideAssignmentExpression)_(NumericLiteralExpression),10 0,(NumericLiteralExpression)^(ReturnStatement)^(IfStatement)_(NotEqualsExpression)_(DivideExpression)_(NumericLiteralExpression),10 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME reversed,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),pop reversed,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),pop reversed,(IdentifierName)^(MultiplyExpression)^(AddExpression)_(IdentifierName),pop reversed,(IdentifierName)^(NotEqualsExpression)_(DivideExpression)_(ParenthesizedExpression)_(SubtractExpression)_(IdentifierName),pop reversed,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),push reversed,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),push reversed,(IdentifierName)^(MultiplyExpression)^(AddExpression1)^(SimpleAssignmentExpression)_(IdentifierName0),push reversed,(IdentifierName)^(NotEqualsExpression)^(IfStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName0),push reversed,(IdentifierName)^(NotEqualsExpression)_(DivideExpression)_(ParenthesizedExpression)_(SubtractExpression)_(IdentifierName),push reversed,(IdentifierName)^(NotEqualsExpression)^(IfStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName1),push reversed,(IdentifierName0)^(SimpleAssignmentExpression)_(IdentifierName1),push reversed,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(DivideAssignmentExpression)_(NumericLiteralExpression),10 reversed,(IdentifierName)^(ReturnStatement)^(Block)_(ForStatement)_(DivideAssignmentExpression)_(NumericLiteralExpression),10 reversed,(IdentifierName)^(MultiplyExpression)_(NumericLiteralExpression),10 reversed,(IdentifierName)^(NotEqualsExpression)_(DivideExpression)_(NumericLiteralExpression),10 reversed,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME reversed,(IdentifierName)^(ReturnStatement)^(Block)^(MethodDeclaration),METHOD_NAME pop,(VariableDeclarator)^(VariableDeclaration)_(VariableDeclarator),push pop,(IdentifierName0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName0),push pop,(IdentifierName)^(AddExpression1)^(SimpleAssignmentExpression)_(IdentifierName0),push pop,(IdentifierName)^(SubtractExpression)_(IdentifierName),push pop,(IdentifierName0)^(SimpleAssignmentExpression)_(ModuloExpression1)_(NumericLiteralExpression),10 pop,(IdentifierName)^(AddExpression)_(MultiplyExpression)_(NumericLiteralExpression),10 pop,(IdentifierName)^(SubtractExpression)^(ParenthesizedExpression)^(DivideExpression)_(NumericLiteralExpression),10 pop,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME push,(IdentifierName0)^(SimpleAssignmentExpression)_(AddExpression1)_(MultiplyExpression)_(NumericLiteralExpression),10 push,(IdentifierName)^(SubtractExpression)^(ParenthesizedExpression)^(DivideExpression)_(NumericLiteralExpression),10 push,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME 10,(NumericLiteralExpression)^(DivideAssignmentExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(PredefinedType),int int,(PredefinedType)^(MethodDeclaration)_(ParameterList)_(Parameter)_(PredefinedType),int int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(PredefinedType),int int,(PredefinedType)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(PredefinedType),int x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),x x,(IdentifierName)^(DivideAssignmentExpression)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),x x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(NotEqualsExpression)_(IdentifierName),x x,(IdentifierName)^(DivideAssignmentExpression)^(ForStatement)_(NotEqualsExpression)_(IdentifierName),x x,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(DivideAssignmentExpression)_(IdentifierName),x x,(IdentifierName)^(NotEqualsExpression)^(ForStatement)_(DivideAssignmentExpression)_(IdentifierName),x 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 0,(NumericLiteralExpression)^(NotEqualsExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(NotEqualsExpression)_(NumericLiteralExpression),0 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(NotEqualsExpression)_(NumericLiteralExpression),0 reversed,(IdentifierName0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)_(IfStatement)_(NotEqualsExpression)_(IdentifierName),reversed reversed,(IdentifierName)^(NotEqualsExpression)^(IfStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(IdentifierName0),reversed
108|add|two|numbers list|node,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter),l list|node,(IdentifierName)^(Parameter),l list|node,(IdentifierName)^(Parameter)^(ParameterList)_(Parameter),l list|node,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),l list|node,(IdentifierName)^(ObjectCreationExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),l list|node,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter),l list|node,(IdentifierName)^(Parameter)^(ParameterList)_(Parameter),l list|node,(IdentifierName)^(Parameter),l list|node,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),l list|node,(IdentifierName)^(ObjectCreationExpression)_(ArgumentList)_(Argument0)_(NumericLiteralExpression),0 list|node,(IdentifierName)^(VariableDeclaration)_(VariableDeclarator),lres list|node,(IdentifierName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),lres list|node,(IdentifierName)^(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),lres list|node,(IdentifierName)^(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),lres list|node,(IdentifierName)^(ObjectCreationExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),next list|node,(IdentifierName)^(ObjectCreationExpression)_(ArgumentList)_(Argument0)_(NumericLiteralExpression),1 list|node,(IdentifierName)^(MethodDeclaration),METHOD_NAME list|node,(IdentifierName)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME list|node,(IdentifierName)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME list|node,(IdentifierName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME l,(Parameter)^(ParameterList)_(Parameter),l l,(IdentifierName)^(EqualsExpression)^(LogicalAndExpression)_(EqualsExpression)_(IdentifierName),l l,(IdentifierName)^(ConditionalAccessExpression)^(Argument0)^(ArgumentList)_(Argument1)_(ConditionalAccessExpression)_(IdentifierName),l l,(IdentifierName)^(EqualsExpression)^(ConditionalExpression)_(NumericLiteralExpression),0 l,(IdentifierName0)^(SimpleMemberAccessExpression)^(ConditionalExpression)_(NumericLiteralExpression),0 l,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),lres l,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),lres l,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),val l,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleMemberAccessExpression)_(IdentifierName1),val l,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(IfStatement)_(GreaterThanExpression)_(NumericLiteralExpression),NUM l,(IdentifierName)^(NotEqualsExpression)^(LogicalAndExpression)_(NotEqualsExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),next l,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),next l,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),next l,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),next l,(IdentifierName)^(ConditionalAccessExpression)_(MemberBindingExpression)_(IdentifierName),next l,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleMemberAccessExpression)^(AddAssignmentExpression)_(NumericLiteralExpression),1 l,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ObjectCreationExpression1)_(ArgumentList)_(Argument0)_(NumericLiteralExpression),1 l,(IdentifierName)^(ConditionalAccessExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(IdentifierName0),add|two|numbers l,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME l,(IdentifierName)^(EqualsExpression)^(LogicalAndExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME l,(IdentifierName)^(EqualsExpression)^(ConditionalExpression)_(NumericLiteralExpression),0 l,(IdentifierName0)^(SimpleMemberAccessExpression)^(ConditionalExpression)_(NumericLiteralExpression),0 l,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),lres l,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ReturnStatement)_(IdentifierName),lres l,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),val l,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(IfStatement)_(GreaterThanExpression)_(NumericLiteralExpression),NUM l,(IdentifierName)^(ConditionalAccessExpression)_(MemberBindingExpression)_(IdentifierName),next l,(IdentifierName)^(ConditionalAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(IdentifierName0),add|two|numbers l,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME l,(IdentifierName)^(EqualsExpression)^(LogicalAndExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(Argument0)^(ArgumentList)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),lres 0,(NumericLiteralExpression)^(ConditionalExpression)^(ParenthesizedExpression)^(AddExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),lres 0,(NumericLiteralExpression)^(ConditionalExpression)^(ParenthesizedExpression)^(AddExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),lres 0,(NumericLiteralExpression)^(ConditionalExpression)^(ParenthesizedExpression)^(AddExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),val 0,(NumericLiteralExpression)^(ConditionalExpression)^(ParenthesizedExpression)^(AddExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),val 0,(NumericLiteralExpression)^(ConditionalExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),val 0,(NumericLiteralExpression)^(ConditionalExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression)^(ModuloExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ModuloExpression1)_(SimpleMemberAccessExpression)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),val lres,(IdentifierName0)^(SimpleMemberAccessExpression)^(GreaterThanExpression)_(NumericLiteralExpression),NUM lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ModuloExpression1)_(NumericLiteralExpression),10 lres,(IdentifierName0)^(SimpleMemberAccessExpression)^(ModuloExpression)_(NumericLiteralExpression),10 lres,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),next lres,(IdentifierName)^(ReturnStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),next lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(InvocationExpression1)_(IdentifierName0),add|two|numbers lres,(IdentifierName)^(ReturnStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(InvocationExpression1)_(IdentifierName0),add|two|numbers lres,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)^(MethodDeclaration),METHOD_NAME lres,(IdentifierName0)^(SimpleMemberAccessExpression)^(GreaterThanExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)^(MethodDeclaration),METHOD_NAME lres,(IdentifierName)^(ReturnStatement)^(Block)^(MethodDeclaration),METHOD_NAME val,(IdentifierName1)^(SimpleMemberAccessExpression)^(GreaterThanExpression)_(NumericLiteralExpression),NUM val,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ModuloExpression1)_(NumericLiteralExpression),10 val,(IdentifierName1)^(SimpleMemberAccessExpression)^(ModuloExpression)_(NumericLiteralExpression),10 val,(IdentifierName1)^(SimpleMemberAccessExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),next val,(IdentifierName1)^(SimpleMemberAccessExpression)^(AddAssignmentExpression)_(NumericLiteralExpression),1 val,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)^(MethodDeclaration),METHOD_NAME val,(IdentifierName1)^(SimpleMemberAccessExpression)^(GreaterThanExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME NUM,(NumericLiteralExpression)^(GreaterThanExpression)^(IfStatement)^(Block)^(MethodDeclaration),METHOD_NAME next,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleMemberAccessExpression)^(AddAssignmentExpression)_(NumericLiteralExpression),1 next,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ObjectCreationExpression1)_(ArgumentList)_(Argument0)_(NumericLiteralExpression),1 next,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(InvocationExpression1)_(IdentifierName0),add|two|numbers next,(IdentifierName)^(MemberBindingExpression)^(ConditionalAccessExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(IdentifierName0),add|two|numbers next,(IdentifierName)^(MemberBindingExpression)^(ConditionalAccessExpression)^(Argument1)^(ArgumentList1)^(InvocationExpression)_(IdentifierName0),add|two|numbers next,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)^(MethodDeclaration),METHOD_NAME add|two|numbers,(IdentifierName0)^(InvocationExpression1)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)^(MethodDeclaration),METHOD_NAME list|node,(IdentifierName)^(Parameter)^(ParameterList)^(MethodDeclaration)_(IdentifierName),list|node list|node,(IdentifierName)^(Parameter)^(ParameterList)^(MethodDeclaration)_(IdentifierName),list|node list|node,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter)_(IdentifierName),list|node list|node,(IdentifierName)^(Parameter)^(ParameterList)_(Parameter)_(IdentifierName),list|node list|node,(IdentifierName)^(MethodDeclaration)_(ParameterList)_(Parameter)_(IdentifierName),list|node list|node,(IdentifierName)^(Parameter)^(ParameterList)_(Parameter)_(IdentifierName),list|node list|node,(IdentifierName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(IdentifierName),list|node list|node,(IdentifierName)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(ObjectCreationExpression)_(IdentifierName),list|node l,(IdentifierName0)^(SimpleMemberAccessExpression)^(NotEqualsExpression)^(LogicalAndExpression)_(NotEqualsExpression)_(IdentifierName),l l,(IdentifierName)^(NotEqualsExpression)^(LogicalAndExpression)_(NotEqualsExpression)_(SimpleMemberAccessExpression)_(IdentifierName0),l 0,(NumericLiteralExpression)^(ConditionalExpression)^(ParenthesizedExpression)^(AddExpression)_(ParenthesizedExpression)_(ConditionalExpression)_(NumericLiteralExpression),0 0,(NumericLiteralExpression)^(ConditionalExpression)^(ParenthesizedExpression)^(AddExpression)_(ParenthesizedExpression)_(ConditionalExpression)_(NumericLiteralExpression),0 lres,(IdentifierName0)^(SimpleMemberAccessExpression)^(ModuloExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),lres lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ModuloExpression1)_(SimpleMemberAccessExpression)_(IdentifierName0),lres lres,(IdentifierName)^(ReturnStatement)^(Block)_(ExpressionStatement)_(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),lres lres,(IdentifierName0)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)^(ExpressionStatement)^(Block)_(ReturnStatement)_(IdentifierName),lres val,(IdentifierName1)^(SimpleMemberAccessExpression)^(ModuloExpression1)^(SimpleAssignmentExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),val val,(IdentifierName1)^(SimpleMemberAccessExpression0)^(SimpleAssignmentExpression)_(ModuloExpression1)_(SimpleMemberAccessExpression)_(IdentifierName1),val
102|two|sum int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter),nums int,(PredefinedType)^(ArrayType)^(Parameter),nums int,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter),nums int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),nums int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName0),nums int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter),target int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)_(Parameter),target int,(PredefinedType)^(Parameter),target int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),target int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)_(VariableDeclarator),int|store int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)_(VariableDeclarator),int|store int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),int|store int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),int|store int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),int|store int,(PredefinedType)^(ArrayType)^(ArrayCreationExpression)_(ArrayInitializerExpression)_(ElementAccessExpression)_(IdentifierName0),int|store int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i int,(PredefinedType)^(ArrayType)^(ArrayCreationExpression)_(ArrayInitializerExpression)_(IdentifierName),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length int,(PredefinedType)^(ArrayType)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME nums,(Parameter)^(ParameterList)_(Parameter),target nums,(IdentifierName0)^(ElementAccessExpression)^(SubtractExpression)_(IdentifierName),target nums,(IdentifierName0)^(ElementAccessExpression)^(SubtractExpression)_(IdentifierName),target nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(GenericName),dictionary nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),int|store nums,(IdentifierName0)^(ElementAccessExpression)^(SubtractExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)_(IdentifierName0),int|store nums,(IdentifierName0)^(ElementAccessExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)_(IdentifierName0),int|store nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)_(IdentifierName),i nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression0)^(SimpleAssignmentExpression)_(IdentifierName1),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),length nums,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(GenericName),dictionary target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),int|store target,(IdentifierName)^(SubtractExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),int|store target,(IdentifierName)^(SubtractExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)_(IdentifierName0),int|store target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)_(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)_(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)^(ArrayInitializerExpression)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),contains|key target,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME dictionary,(GenericName)^(VariableDeclaration)_(VariableDeclarator),int|store dictionary,(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),int|store dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i int|store,(IdentifierName0)^(ElementAccessExpression)^(ArrayInitializerExpression)_(IdentifierName),i int|store,(IdentifierName0)^(ElementAccessExpression0)^(SimpleAssignmentExpression)_(IdentifierName1),i int|store,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),contains|key int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator),i 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(IdentifierName)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME length,(IdentifierName1)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter)_(PredefinedType),int int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)_(Parameter)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int dictionary,(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(GenericName),dictionary dictionary,(GenericName)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(ObjectCreationExpression)_(GenericName),dictionary i,(IdentifierName)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LessThanExpression)_(IdentifierName),i i,(IdentifierName)^(LessThanExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i

get|common|characters [],(ArrayBracketPair0)^(MethodDeclaration)_(PrimitiveType1),int [],(ArrayBracketPair0)^(MethodDeclaration)_(NameExpr2),METHOD_NAME int,(PrimitiveType1)^(MethodDeclaration)_(NameExpr2),METHOD_NAME int,(PrimitiveType1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),charsa int,(PrimitiveType1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),char int,(PrimitiveType1)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),charsa METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),char METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),charsb METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),char METHOD_NAME,(NameExpr2)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] charsa,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),char charsa,(VariableDeclaratorId0)^(Parameter)_(ArrayBracketPair2),[] charsa,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),charsb charsa,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),char charsa,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] charsa,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),separation charsa,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int char,(PrimitiveType1)^(Parameter)_(ArrayBracketPair2),[] char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),charsb char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),char char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),separation char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),charsb [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),char [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),separation [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int charsb,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),char charsb,(VariableDeclaratorId0)^(Parameter)_(ArrayBracketPair2),[] charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),separation charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),common charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length charsb,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),common char,(PrimitiveType1)^(Parameter)_(ArrayBracketPair2),[] char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),separation char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),common char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length char,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),common [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),separation [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),common [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),common separation,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),common separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length separation,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),common int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),common int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),common int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),common int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr1)_(NameExpr0),charsa int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr2)_(NameExpr0),charsb int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr2)_(NameExpr2),length int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(NameExpr3),min int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType0)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 common,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr1)_(NameExpr0),charsa common,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr1)_(NameExpr2),length common,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr2)_(NameExpr0),charsb common,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(FieldAccessExpr2)_(NameExpr2),length common,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(MethodCallExpr0)_(NameExpr3),min common,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),int common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex common,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 charsa,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),length charsa,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr0),charsb charsa,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr2),length charsa,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)_(NameExpr3),min charsa,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),int charsa,(NameExpr0)^(FieldAccessExpr1)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] length,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr0),charsb length,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(FieldAccessExpr2)_(NameExpr2),length length,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)_(NameExpr3),min length,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),int length,(NameExpr2)^(FieldAccessExpr1)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] charsb,(NameExpr0)^(FieldAccessExpr2)_(NameExpr2),length charsb,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)_(NameExpr3),min charsb,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),int charsb,(NameExpr0)^(FieldAccessExpr2)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] length,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)_(NameExpr3),min length,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),int length,(NameExpr2)^(FieldAccessExpr2)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] min,(NameExpr3)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),int min,(NameExpr3)^(MethodCallExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean int,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] int,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),boolean [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ArrayBracketPair2),[] [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),matched boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(FieldAccessExpr0)_(NameExpr0),charsb boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(FieldAccessExpr0)_(NameExpr2),length boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean boolean,(PrimitiveType0)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int boolean,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index matched,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(FieldAccessExpr0)_(NameExpr0),charsb matched,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(ArrayCreationLevel)_(FieldAccessExpr0)_(NameExpr2),length matched,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayCreationExpr)_(PrimitiveType1),boolean matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length matched,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i charsb,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),length charsb,(NameExpr0)^(FieldAccessExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),boolean charsb,(NameExpr0)^(FieldAccessExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] length,(NameExpr2)^(FieldAccessExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)_(PrimitiveType1),boolean length,(NameExpr2)^(FieldAccessExpr)^(ArrayCreationLevel)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] boolean,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)_(ArrayBracketPair2),[] boolean,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int boolean,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i boolean,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length boolean,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int boolean,(PrimitiveType1)^(ArrayCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair2)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),commonindex int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length commonindex,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0 commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common commonindex,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr1),length 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length i,(NameExpr0)^(BinaryExpr:less)_(NameExpr1),length i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length length,(NameExpr1)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),character int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr0),charsa int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr1),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr1),character int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),charsb int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr5),matched int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr6),indexof int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),character int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common i,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0 i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),character i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),length 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),character 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common length,(VariableDeclaratorId0)^(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr0),charsa length,(VariableDeclaratorId0)^(VariableDeclarator)_(FieldAccessExpr1)_(NameExpr2),length length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),character length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length length,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common charsa,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),length charsa,(NameExpr0)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i charsa,(NameExpr0)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char charsa,(NameExpr0)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int charsa,(NameExpr0)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index charsa,(NameExpr0)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex charsa,(NameExpr0)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common length,(NameExpr2)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i length,(NameExpr2)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char length,(NameExpr2)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int length,(NameExpr2)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index length,(NameExpr2)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex length,(NameExpr2)^(FieldAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),char i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),character i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr0),charsa i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr1),i i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr1),character i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),charsb i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr5),matched i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr6),indexof i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),character i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common char,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),character char,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr0),charsa char,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr1),i char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr1),character char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),charsb char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr5),matched char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr6),indexof char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),character char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex char,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common character,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr0),charsa character,(VariableDeclaratorId0)^(VariableDeclarator)_(ArrayAccessExpr1)_(NameExpr1),i character,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int character,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index character,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index character,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 character,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common charsa,(NameExpr0)^(ArrayAccessExpr)_(NameExpr1),i charsa,(NameExpr0)^(ArrayAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int charsa,(NameExpr0)^(ArrayAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index i,(NameExpr1)^(ArrayAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int i,(NameExpr1)^(ArrayAccessExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),index int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr1),character int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),charsb int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:minus)_(NameExpr0),i int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:minus)_(NameExpr1),separation int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),i int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),separation int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:plus)_(IntegerLiteralExpr1),1 int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr5),matched int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(MethodCallExpr1)_(NameExpr6),indexof int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),character int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr1),character index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr2),charsb index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:minus)_(NameExpr0),i index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:minus)_(NameExpr1),separation index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),i index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),separation index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(BinaryExpr:plus)_(IntegerLiteralExpr1),1 index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr5),matched index,(VariableDeclaratorId0)^(VariableDeclarator)_(MethodCallExpr1)_(NameExpr6),indexof index,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index index,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 index,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common character,(NameExpr1)^(MethodCallExpr)_(NameExpr2),charsb character,(NameExpr1)^(MethodCallExpr)_(BinaryExpr:minus)_(NameExpr0),i character,(NameExpr1)^(MethodCallExpr)_(BinaryExpr:minus)_(NameExpr1),separation character,(NameExpr1)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index charsb,(NameExpr2)^(MethodCallExpr)_(BinaryExpr:minus)_(NameExpr0),i charsb,(NameExpr2)^(MethodCallExpr)_(BinaryExpr:minus)_(NameExpr1),separation charsb,(NameExpr2)^(MethodCallExpr)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),i charsb,(NameExpr2)^(MethodCallExpr)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),separation charsb,(NameExpr2)^(MethodCallExpr)_(BinaryExpr:plus)_(IntegerLiteralExpr1),1 charsb,(NameExpr2)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index i,(NameExpr0)^(BinaryExpr:minus3)_(NameExpr1),separation i,(NameExpr0)^(BinaryExpr:minus3)^(MethodCallExpr)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),i i,(NameExpr0)^(BinaryExpr:minus3)^(MethodCallExpr)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),separation i,(NameExpr0)^(BinaryExpr:minus3)^(MethodCallExpr)_(BinaryExpr:plus)_(IntegerLiteralExpr1),1 i,(NameExpr0)^(BinaryExpr:minus3)^(MethodCallExpr)_(NameExpr5),matched separation,(NameExpr1)^(BinaryExpr:minus3)^(MethodCallExpr)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr0),i separation,(NameExpr1)^(BinaryExpr:minus3)^(MethodCallExpr)_(BinaryExpr:plus)_(BinaryExpr:plus)_(NameExpr1),separation separation,(NameExpr1)^(BinaryExpr:minus3)^(MethodCallExpr)_(BinaryExpr:plus)_(IntegerLiteralExpr1),1 separation,(NameExpr1)^(BinaryExpr:minus3)^(MethodCallExpr)_(NameExpr5),matched i,(NameExpr0)^(BinaryExpr:plus)_(NameExpr1),separation i,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus4)_(IntegerLiteralExpr1),1 i,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus4)^(MethodCallExpr)_(NameExpr5),matched i,(NameExpr0)^(BinaryExpr:plus)^(BinaryExpr:plus4)^(MethodCallExpr)_(NameExpr6),indexof separation,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus4)_(IntegerLiteralExpr1),1 separation,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus4)^(MethodCallExpr)_(NameExpr5),matched separation,(NameExpr1)^(BinaryExpr:plus)^(BinaryExpr:plus4)^(MethodCallExpr)_(NameExpr6),indexof 1,(IntegerLiteralExpr1)^(BinaryExpr:plus4)^(MethodCallExpr)_(NameExpr5),matched 1,(IntegerLiteralExpr1)^(BinaryExpr:plus4)^(MethodCallExpr)_(NameExpr6),indexof matched,(NameExpr5)^(MethodCallExpr)_(NameExpr6),indexof matched,(NameExpr5)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index indexof,(NameExpr6)^(MethodCallExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:greater)_(NameExpr0),index index,(NameExpr0)^(BinaryExpr:greater)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),common index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(UnaryExpr:posIncrement)_(NameExpr0),commonindex index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),character index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),matched index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),index index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:less)_(NameExpr0),commonindex index,(NameExpr0)^(BinaryExpr:greater)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common 1,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),common 1,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),character 1,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),matched 1,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),index 1,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:greater)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true 1,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:greater)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common common,(NameExpr0)^(ArrayAccessExpr0)_(UnaryExpr:posIncrement)_(NameExpr0),commonindex common,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)_(NameExpr1),character common,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),matched common,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),index common,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true commonindex,(NameExpr0)^(UnaryExpr:posIncrement1)^(ArrayAccessExpr0)^(AssignExpr:assign)_(NameExpr1),character commonindex,(NameExpr0)^(UnaryExpr:posIncrement1)^(ArrayAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true character,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),matched character,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),index character,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BooleanLiteralExpr1),true matched,(NameExpr0)^(ArrayAccessExpr0)_(NameExpr1),index matched,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)_(BooleanLiteralExpr1),true index,(NameExpr1)^(ArrayAccessExpr0)^(AssignExpr:assign)_(BooleanLiteralExpr1),true commonindex,(NameExpr0)^(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),common commonindex,(NameExpr0)^(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length commonindex,(NameExpr0)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),common commonindex,(NameExpr0)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),commonindex commonindex,(NameExpr0)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 commonindex,(NameExpr0)^(BinaryExpr:less)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common common,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),length common,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),common common,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),commonindex common,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 common,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr0),common length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ArrayAccessExpr0)_(NameExpr1),commonindex length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common common,(NameExpr0)^(ArrayAccessExpr0)_(NameExpr1),commonindex common,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 common,(NameExpr0)^(ArrayAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common commonindex,(NameExpr1)^(ArrayAccessExpr0)^(AssignExpr:assign)_(UnaryExpr:negative)_(IntegerLiteralExpr0),1 commonindex,(NameExpr1)^(ArrayAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common 1,(IntegerLiteralExpr0)^(UnaryExpr:negative1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),common
reverse int,(PrimitiveType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME int,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),x int,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),x METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(NameExpr0),x METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),a METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(NameExpr0),x METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result x,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(NameExpr0),x x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result x,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(NameExpr0),x int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(NameExpr0),result int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),result int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(NameExpr0),x int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result result,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0 result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(NameExpr0),x result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 result,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(NameExpr0),x 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),a x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:remainder)_(NameExpr0),x x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(NameExpr0),x x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a x,(NameExpr0)^(BinaryExpr:notEquals)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),a 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:remainder)_(NameExpr0),x 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(NameExpr0),x 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),result 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),a int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:remainder)_(NameExpr0),x int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(NameExpr0),x int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result a,(VariableDeclaratorId0)^(VariableDeclarator)_(BinaryExpr:remainder)_(NameExpr0),x a,(VariableDeclaratorId0)^(VariableDeclarator)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 a,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x a,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(NameExpr0),x a,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 a,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result a,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 a,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:remainder)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x x,(NameExpr0)^(BinaryExpr:remainder)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),x 10,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:divide)_(NameExpr0),x x,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:divide1)_(IntegerLiteralExpr1),10 x,(NameExpr0)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result x,(NameExpr0)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 x,(NameExpr0)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result 10,(IntegerLiteralExpr1)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:greater)_(NameExpr0),result 10,(IntegerLiteralExpr1)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result 10,(IntegerLiteralExpr1)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:greater)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr0),integer result,(NameExpr0)^(BinaryExpr:greater)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr2),maxvalue result,(NameExpr0)^(BinaryExpr:greater)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr0),integer result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr2),maxvalue result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a result,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result integer,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),maxvalue integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:greater)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr0),integer result,(NameExpr0)^(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr2),maxvalue result,(NameExpr0)^(BinaryExpr:equals)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a result,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 result,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 integer,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),maxvalue integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a maxvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(NameExpr0),a 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:greater)_(IntegerLiteralExpr1),7 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 a,(NameExpr0)^(BinaryExpr:greater)_(IntegerLiteralExpr1),7 a,(NameExpr0)^(BinaryExpr:greater)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 7,(IntegerLiteralExpr1)^(BinaryExpr:greater)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(NameExpr0),result 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:or)_(BinaryExpr:less)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),result 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:less)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr0),integer result,(NameExpr0)^(BinaryExpr:less)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr2),minvalue result,(NameExpr0)^(BinaryExpr:less)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr0),integer result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr2),minvalue result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a result,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result integer,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),minvalue integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(NameExpr0),result 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:equals)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)_(EnclosedExpr)_(BinaryExpr:and)_(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:less)^(BinaryExpr:or)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr0),integer result,(NameExpr0)^(BinaryExpr:equals)_(BinaryExpr:divide)_(FieldAccessExpr0)_(NameExpr2),minvalue result,(NameExpr0)^(BinaryExpr:equals)_(BinaryExpr:divide)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a result,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 result,(NameExpr0)^(BinaryExpr:equals)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 integer,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),minvalue integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a integer,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)_(IntegerLiteralExpr1),10 minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a minvalue,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(NameExpr0),a 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)_(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 10,(IntegerLiteralExpr1)^(BinaryExpr:divide)^(BinaryExpr:equals)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 a,(NameExpr0)^(BinaryExpr:less)_(UnaryExpr:negative)_(IntegerLiteralExpr0),8 a,(NameExpr0)^(BinaryExpr:less)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 8,(IntegerLiteralExpr0)^(UnaryExpr:negative)^(BinaryExpr:less)^(BinaryExpr:and)^(EnclosedExpr)^(BinaryExpr:or)^(IfStmt)_(ReturnStmt)_(IntegerLiteralExpr0),0 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),result 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),result 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(BinaryExpr:plus)_(NameExpr1),a 0,(IntegerLiteralExpr0)^(ReturnStmt)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(NameExpr0),result result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(BinaryExpr:times)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(AssignExpr:assign)_(BinaryExpr:plus)_(NameExpr1),a result,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result result,(NameExpr0)^(BinaryExpr:times)_(IntegerLiteralExpr1),10 result,(NameExpr0)^(BinaryExpr:times)^(BinaryExpr:plus1)_(NameExpr1),a 10,(IntegerLiteralExpr1)^(BinaryExpr:times)^(BinaryExpr:plus1)_(NameExpr1),a a,(NameExpr1)^(BinaryExpr:plus1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(NameExpr0),result
add|two|numbers listnode,(ClassOrInterfaceType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME listnode,(ClassOrInterfaceType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),l listnode,(ClassOrInterfaceType0)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),listnode METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),l METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),listnode METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),l METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),listnode l,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),carry l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(ClassOrInterfaceType1),listnode listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),carry listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next l,(VariableDeclaratorId0)^(Parameter)_(ClassOrInterfaceType1),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),carry l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy l,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),carry listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy listnode,(ClassOrInterfaceType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),carry int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p int,(PrimitiveType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy carry,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0 carry,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode carry,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p carry,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy carry,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p carry,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType0),listnode 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),p listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 listnode,(ClassOrInterfaceType0)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),dummy p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry p,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 dummy,(VariableDeclaratorId0)^(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode dummy,(VariableDeclaratorId0)^(VariableDeclarator)_(ObjectCreationExpr)_(IntegerLiteralExpr1),0 dummy,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p dummy,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy dummy,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry dummy,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr)_(IntegerLiteralExpr1),0 listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy 0,(IntegerLiteralExpr1)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p 0,(IntegerLiteralExpr1)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr1),dummy p,(NameExpr0)^(AssignExpr:assign)_(NameExpr1),dummy p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy dummy,(NameExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy l,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)_(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next carry,(NameExpr0)^(BinaryExpr:notEquals)_(IntegerLiteralExpr1),0 carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),p carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),next carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy carry,(NameExpr0)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),p 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),next 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy 0,(IntegerLiteralExpr1)^(BinaryExpr:notEquals)^(BinaryExpr:or)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr2),val l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),p l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr2),val null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),p null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next carry,(NameExpr0)^(AssignExpr:plus)_(FieldAccessExpr1)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)_(FieldAccessExpr1)_(NameExpr2),val carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),val l,(NameExpr0)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l l,(NameExpr0)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next val,(NameExpr2)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l val,(NameExpr2)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l val,(NameExpr2)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(AssignExpr:assign)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(AssignExpr:assign)_(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NameExpr0),l l,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(IfStmt)_(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)_(NullLiteralExpr1),null l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr2),val l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),p l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),next l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy l,(NameExpr0)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:plus0)_(FieldAccessExpr1)_(NameExpr2),val null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr0),p null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr0)_(NameExpr2),next null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy null,(NullLiteralExpr1)^(BinaryExpr:notEquals)^(IfStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next carry,(NameExpr0)^(AssignExpr:plus)_(FieldAccessExpr1)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)_(FieldAccessExpr1)_(NameExpr2),val carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry carry,(NameExpr0)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),val l,(NameExpr0)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l l,(NameExpr0)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next val,(NameExpr2)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),l val,(NameExpr2)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),l val,(NameExpr2)^(FieldAccessExpr1)^(AssignExpr:plus)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(AssignExpr:assign)_(FieldAccessExpr1)_(NameExpr0),l l,(NameExpr0)^(AssignExpr:assign)_(FieldAccessExpr1)_(NameExpr2),next l,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry l,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(IfStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 l,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),next p,(NameExpr0)^(FieldAccessExpr0)_(NameExpr2),next p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(NameExpr0),carry p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p p,(NameExpr0)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(ClassOrInterfaceType0),listnode next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(NameExpr0),carry next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)_(ObjectCreationExpr)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p next,(NameExpr2)^(FieldAccessExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)_(BinaryExpr:remainder)_(NameExpr0),carry listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)_(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p listnode,(ClassOrInterfaceType0)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next carry,(NameExpr0)^(BinaryExpr:remainder)_(IntegerLiteralExpr1),10 carry,(NameExpr0)^(BinaryExpr:remainder)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry carry,(NameExpr0)^(BinaryExpr:remainder)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 carry,(NameExpr0)^(BinaryExpr:remainder)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p 10,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(NameExpr0),carry 10,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:slash0)_(IntegerLiteralExpr1),10 10,(IntegerLiteralExpr1)^(BinaryExpr:remainder)^(ObjectCreationExpr1)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p carry,(NameExpr0)^(AssignExpr:slash)_(IntegerLiteralExpr1),10 carry,(NameExpr0)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p carry,(NameExpr0)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p carry,(NameExpr0)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next carry,(NameExpr0)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy carry,(NameExpr0)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next 10,(IntegerLiteralExpr1)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(NameExpr0),p 10,(IntegerLiteralExpr1)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr0),p 10,(IntegerLiteralExpr1)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)_(ExpressionStmt)_(AssignExpr:assign0)_(FieldAccessExpr1)_(NameExpr2),next 10,(IntegerLiteralExpr1)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy 10,(IntegerLiteralExpr1)^(AssignExpr:slash)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next p,(NameExpr0)^(AssignExpr:assign)_(FieldAccessExpr1)_(NameExpr0),p p,(NameExpr0)^(AssignExpr:assign)_(FieldAccessExpr1)_(NameExpr2),next p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr0),dummy p,(NameExpr0)^(AssignExpr:assign)^(ExpressionStmt)^(BlockStmt)^(WhileStmt)^(BlockStmt)_(ReturnStmt)_(FieldAccessExpr0)_(NameExpr2),next p,(NameExpr0)^(FieldAccessExpr1)_(NameExpr2),next dummy,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),next
two|sum int,(PrimitiveType0)^(MethodDeclaration)_(NameExpr1),METHOD_NAME int,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),nums int,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int int,(PrimitiveType0)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),nums METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(ArrayBracketPair2),[] METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),target METHOD_NAME,(NameExpr1)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int nums,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int nums,(VariableDeclaratorId0)^(Parameter)_(ArrayBracketPair2),[] nums,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),target nums,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int nums,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(ArrayBracketPair4),[] int,(PrimitiveType1)^(Parameter)_(ArrayBracketPair2),[] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),target int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(ArrayBracketPair4),[] [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(VariableDeclaratorId0),target [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(Parameter)_(PrimitiveType1),int [],(ArrayBracketPair2)^(Parameter)^(MethodDeclaration)_(ArrayBracketPair4),[] target,(VariableDeclaratorId0)^(Parameter)_(PrimitiveType1),int target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(ArrayBracketPair4),[] target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType0),int target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType1),int target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),map target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),hashmap target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int target,(VariableDeclaratorId0)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(ArrayBracketPair4),[] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType1),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),map int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),hashmap int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType1)^(Parameter)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType0),int [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(ClassOrInterfaceType)_(PrimitiveType1),int [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),map [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ExpressionStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),hashmap [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int [],(ArrayBracketPair4)^(MethodDeclaration)_(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} int,(PrimitiveType0)^(ClassOrInterfaceType)_(PrimitiveType1),int int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),map int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),hashmap int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType0)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),map int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)_(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),hashmap int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType1)^(ClassOrInterfaceType)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} map,(VariableDeclaratorId0)^(VariableDeclarator)_(ObjectCreationExpr)_(ClassOrInterfaceType0),hashmap map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int map,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} hashmap,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(BinaryExpr:less)_(NameExpr0),i hashmap,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int hashmap,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i hashmap,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] hashmap,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int hashmap,(ClassOrInterfaceType0)^(ObjectCreationExpr)^(VariableDeclarator)^(VariableDeclarationExpr)^(ExpressionStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} i,(NameExpr0)^(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr0),nums i,(NameExpr0)^(BinaryExpr:less)_(FieldAccessExpr1)_(NameExpr2),length i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int i,(NameExpr0)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} nums,(NameExpr0)^(FieldAccessExpr)_(NameExpr2),length nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int nums,(NameExpr0)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(PrimitiveType0),int length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int length,(NameExpr2)^(FieldAccessExpr)^(BinaryExpr:less)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(VariableDeclaratorId0),i int,(PrimitiveType0)^(VariableDeclarationExpr)_(VariableDeclarator)_(IntegerLiteralExpr1),0 int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr0),nums int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr1),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int int,(PrimitiveType0)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} i,(VariableDeclaratorId0)^(VariableDeclarator)_(IntegerLiteralExpr1),0 i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int i,(VariableDeclaratorId0)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(UnaryExpr:posIncrement)_(NameExpr0),i 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int 0,(IntegerLiteralExpr1)^(VariableDeclarator)^(VariableDeclarationExpr)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr0),map i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr0),nums i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr1),i i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(MethodCallExpr0)_(NameExpr3),containskey i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)_(BlockStmt)_(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int i,(NameExpr0)^(UnaryExpr:posIncrement)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} map,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:minus)_(NameExpr0),target map,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr0),nums map,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr1),i map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr0),map map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr3),get map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr0),nums map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr1),i map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i map,(NameExpr0)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put map,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] map,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int map,(NameExpr0)^(MethodCallExpr)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} target,(NameExpr0)^(BinaryExpr:minus2)_(ArrayAccessExpr1)_(NameExpr0),nums target,(NameExpr0)^(BinaryExpr:minus2)_(ArrayAccessExpr1)_(NameExpr1),i target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)_(NameExpr3),containskey target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr0),map target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr3),get target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr0),nums target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr1),i target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put nums,(NameExpr0)^(ArrayAccessExpr)_(NameExpr1),i nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)_(NameExpr3),containskey nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)_(NameExpr3),containskey i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr0),map containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr3),get containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr0),nums containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr1),i containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayCreationLevel0),[] containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(PrimitiveType1),int containskey,(NameExpr3)^(MethodCallExpr)^(IfStmt)^(BlockStmt)^(ForStmt)^(BlockStmt)_(ReturnStmt)_(ArrayCreationExpr)_(ArrayInitializerExpr2),{} [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(PrimitiveType1),int [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr0),map [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr0),nums [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr1),i [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr3),get [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i [],(ArrayCreationLevel0)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map [],(ArrayCreationLevel0)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr0),nums [],(ArrayCreationLevel0)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr1),i [],(ArrayCreationLevel0)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i [],(ArrayCreationLevel0)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr0),map int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(NameExpr0),target int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr0),nums int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr1),i int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(MethodCallExpr0)_(NameExpr3),get int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr)_(NameExpr1),i int,(PrimitiveType1)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map int,(PrimitiveType1)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr0),nums int,(PrimitiveType1)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(ArrayAccessExpr2)_(NameExpr1),i int,(PrimitiveType1)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i int,(PrimitiveType1)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put map,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:minus)_(NameExpr0),target map,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr0),nums map,(NameExpr0)^(MethodCallExpr)_(BinaryExpr:minus)_(ArrayAccessExpr1)_(NameExpr1),i map,(NameExpr0)^(MethodCallExpr)^(ArrayInitializerExpr)_(NameExpr1),i target,(NameExpr0)^(BinaryExpr:minus2)_(ArrayAccessExpr1)_(NameExpr0),nums target,(NameExpr0)^(BinaryExpr:minus2)_(ArrayAccessExpr1)_(NameExpr1),i target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)_(NameExpr3),get target,(NameExpr0)^(BinaryExpr:minus2)^(MethodCallExpr)^(ArrayInitializerExpr)_(NameExpr1),i nums,(NameExpr0)^(ArrayAccessExpr)_(NameExpr1),i nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)_(NameExpr3),get nums,(NameExpr0)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(ArrayInitializerExpr)_(NameExpr1),i i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)_(NameExpr3),get i,(NameExpr1)^(ArrayAccessExpr)^(BinaryExpr:minus2)^(MethodCallExpr)^(ArrayInitializerExpr)_(NameExpr1),i get,(NameExpr3)^(MethodCallExpr)^(ArrayInitializerExpr)_(NameExpr1),i i,(NameExpr1)^(ArrayInitializerExpr)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr0),map i,(NameExpr1)^(ArrayInitializerExpr)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr3),i i,(NameExpr1)^(ArrayInitializerExpr)^(ArrayCreationExpr)^(ReturnStmt)^(IfStmt)_(BlockStmt)_(ExpressionStmt)_(MethodCallExpr0)_(NameExpr4),put map,(NameExpr0)^(MethodCallExpr)_(ArrayAccessExpr2)_(NameExpr0),nums map,(NameExpr0)^(MethodCallExpr)_(ArrayAccessExpr2)_(NameExpr1),i nums,(NameExpr0)^(ArrayAccessExpr2)_(NameExpr1),i nums,(NameExpr0)^(ArrayAccessExpr2)^(MethodCallExpr)_(NameExpr3),i nums,(NameExpr0)^(ArrayAccessExpr2)^(MethodCallExpr)_(NameExpr4),put i,(NameExpr1)^(ArrayAccessExpr2)^(MethodCallExpr)_(NameExpr3),i i,(NameExpr1)^(ArrayAccessExpr2)^(MethodCallExpr)_(NameExpr4),put i,(NameExpr3)^(MethodCallExpr)_(NameExpr4),put [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(PrimitiveType1),int [],(ArrayCreationLevel0)^(ArrayCreationExpr)_(ArrayInitializerExpr2),{} int,(PrimitiveType1)^(ArrayCreationExpr)_(ArrayInitializerExpr2),{}
two|sum int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter),nums int,(PredefinedType)^(ArrayType)^(Parameter),nums int,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter),nums int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),nums int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName0),nums int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter),target int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)_(Parameter),target int,(PredefinedType)^(Parameter),target int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration)_(ParameterList)_(Parameter),target int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName),dictionary int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)_(VariableDeclarator),int|store int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)_(VariableDeclarator),int|store int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),int|store int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),int|store int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),int|store int,(PredefinedType)^(ArrayType)^(ArrayCreationExpression)_(ArrayInitializerExpression)_(ElementAccessExpression)_(IdentifierName0),int|store int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(NumericLiteralExpression),0 int,(PredefinedType)^(VariableDeclaration)_(VariableDeclarator),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i int,(PredefinedType)^(ArrayType)^(ArrayCreationExpression)_(ArrayInitializerExpression)_(IdentifierName),i int,(PredefinedType)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length int,(PredefinedType)^(ArrayType)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(TypeArgumentList)^(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME nums,(Parameter)^(ParameterList)_(Parameter),target nums,(IdentifierName0)^(ElementAccessExpression)^(SubtractExpression)_(IdentifierName),target nums,(IdentifierName0)^(ElementAccessExpression)^(SubtractExpression)_(IdentifierName),target nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(GenericName),dictionary nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),int|store nums,(IdentifierName0)^(ElementAccessExpression)^(SubtractExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)_(IdentifierName0),int|store nums,(IdentifierName0)^(ElementAccessExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)_(IdentifierName0),int|store nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)_(IdentifierName),i nums,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i nums,(IdentifierName0)^(ElementAccessExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression0)^(SimpleAssignmentExpression)_(IdentifierName1),i nums,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),length nums,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME nums,(IdentifierName0)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(GenericName),dictionary target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(LocalDeclarationStatement)_(VariableDeclaration)_(VariableDeclarator),int|store target,(IdentifierName)^(SubtractExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName0),int|store target,(IdentifierName)^(SubtractExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)_(IdentifierName0),int|store target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i target,(Parameter)^(ParameterList)^(MethodDeclaration)_(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)_(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)_(ElementAccessExpression)_(BracketedArgumentList1)_(Argument0)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)^(Argument0)^(BracketedArgumentList1)^(ElementAccessExpression)^(ArrayInitializerExpression)_(IdentifierName),i target,(IdentifierName)^(SubtractExpression)^(Argument0)^(ArgumentList1)^(InvocationExpression)_(SimpleMemberAccessExpression0)_(IdentifierName1),contains|key target,(Parameter)^(ParameterList)^(MethodDeclaration),METHOD_NAME dictionary,(GenericName)^(VariableDeclaration)_(VariableDeclarator),int|store dictionary,(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator),int|store dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i dictionary,(GenericName)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(LessThanExpression)_(IdentifierName),i int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)_(ForStatement)_(PostIncrementExpression)_(IdentifierName),i int|store,(IdentifierName0)^(ElementAccessExpression)^(ArrayInitializerExpression)_(IdentifierName),i int|store,(IdentifierName0)^(ElementAccessExpression0)^(SimpleAssignmentExpression)_(IdentifierName1),i int|store,(IdentifierName0)^(SimpleMemberAccessExpression)_(IdentifierName1),contains|key int|store,(VariableDeclarator)^(VariableDeclaration)^(LocalDeclarationStatement)^(Block)^(MethodDeclaration),METHOD_NAME 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator),i 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i 0,(NumericLiteralExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LessThanExpression)_(SimpleMemberAccessExpression)_(IdentifierName1),length i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(IdentifierName)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME length,(IdentifierName1)^(SimpleMemberAccessExpression)^(LessThanExpression)^(ForStatement)^(Block)^(MethodDeclaration),METHOD_NAME int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(Parameter)^(ParameterList)^(MethodDeclaration)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(Parameter)^(ParameterList)_(Parameter)_(ArrayType)_(PredefinedType),int int,(PredefinedType)^(ArrayType)^(MethodDeclaration)_(ParameterList)_(Parameter)_(PredefinedType),int int,(PredefinedType)^(ArrayType)^(Parameter)^(ParameterList)_(Parameter)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int int,(PredefinedType)^(TypeArgumentList)_(PredefinedType),int dictionary,(GenericName)^(ObjectCreationExpression)^(EqualsValueClause)^(VariableDeclarator)^(VariableDeclaration)_(GenericName),dictionary dictionary,(GenericName)^(VariableDeclaration)_(VariableDeclarator)_(EqualsValueClause)_(ObjectCreationExpression)_(GenericName),dictionary i,(IdentifierName)^(LessThanExpression)^(ForStatement)_(VariableDeclaration)_(VariableDeclarator),i i,(VariableDeclarator)^(VariableDeclaration)^(ForStatement)_(LessThanExpression)_(IdentifierName),i i,(IdentifierName)^(PostIncrementExpression)^(ForStatement)_(LessThanExpression)_(IdentifierName),i i,(IdentifierName)^(LessThanExpression)^(ForStatement)_(PostIncrementExpression)_(IdentifierName),i
